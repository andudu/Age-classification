% PCA: Perform PCA using covariance.
% data      --- MxN matrix of input data 
% signals   --- Mxp matrix of projected data
% v        --- each column is a PC
% d         --- Mx1 matrix of variances
%
function [signals,base] = pca( data )     %data??????????????????
[M, N] = size( data ); %M??????????N????????

% subtract off the mean for each dimension
mn = mean( data, 1 );                            %????????????mn??1*N
xmean =double(data) - repmat( mn, M, 1 );                %????????
covariance =xmean * xmean';% M * M ??????
  
[v d]=eig(covariance);
d1=diag(d);
[d2 index]=sort(d1); %??????????
cols=size(v,2);% ??????????????????
dsort=[];
base=[];
for  i=1:cols
    vsort(:,i) = v(:, index(cols-i+1) ); % vsort ??????M*col(??:col????????M)????????????????????????????????????,??????????????????????
    dsort(i)= d1( index(cols-i+1) );  % dsort ????????????????????????????????????????
end  %????????????

%????????90%??????
dsum = sum(dsort);
    dsum_extract = 0;
    p = 0;
    while( dsum_extract/dsum < 0.9)
        p = p + 1;
        dsum_extract = sum(dsort(1:p));
    end

i=1;
% (????????)??????????????????????
while (i<=p && dsort(i)>0)
    base(:,i) = dsort(i)^(-1/2) * xmean' * vsort(:,i);   % base??N??p????????????dsort(i)^(1/2)??????????????????????
    i = i + 1;
end

%????????????????????????????,???????? M*p ??????signals
signals = double(data) * base;  %signals??M*p


      
